-- Rayfield Auto Parry & Auto Spam Script - PARTE 1
local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
Name = "Phantom Ball script - By Darker9899 - Bridge Hub",
LoadingTitle = "Loading Script...",
LoadingSubtitle = "by Darker9899",
ConfigurationSaving = {
Enabled = true,
FolderName = "AutoParryConfig",
FileName = "Config"
},
Discord = {
Enabled = false,
Invite = "noinvitelink",
RememberJoins = true
},
KeySystem = false
})

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

-- Variables
local LocalPlayer = Players.LocalPlayer
local AutoParryEnabled = false
local AutoSpamEnabled = false
local AutoSpamSpeed = 0.0000001
local ParryDistance = 30
local SpamDistance = 30
local ESPSquare = nil
local ParryConnection = nil
local SpamConnection = nil
local ParryDetectionDistance = 30
local SpamDetectionDistance = 30
local BaseParryDistance = 30
local PlayerDetectedInRange45 = false
local BallDetected = false
local DistanceIncreaseStarted = false

-- New variables for spam multiplication
local AutoSpamMultiplicationEnabled = false
local SpamMultiplier = 1

-- Advanced Spam Detector Variables
local AdvancedSpamEnabled = false
local AdvancedSpamConnection = nil
local AdvancedSpamDetectionDistance = 35
local PlayerInAdvancedRange = false
local AdvancedSpamActive = false

-- NEW: Auto Spam V2 Variables (Redesigned)
local AutoSpamV2Enabled = false
local AutoSpamV2Connection = nil
local AutoSpamV2DetectionDistance = 30 -- Uses original spam slider
local AutoSpamV2Active = false

-- ESP Variables
local ESPEnabled = false
local ParryDetectorESP = nil
local SpamDetectorESP = nil
local AdvancedSpamDetectorESP = nil
local AutoSpamV2DetectorESP = nil

-- Ball ESP Variables
local BallESPEnabled = false
local BallESP = nil
local BallESPConnection = nil

-- Create Tabs
local MainTab = Window:CreateTab("Main", 4483362458)
local VisualTab = Window:CreateTab("Visual", 4483362458)

-- NEW: Auto Spam V2 Detection Function
local function IsPlayerAndBallWithinV2Range()
    local localPlayerPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localPlayerPosition then return false end
    
    local GameBall = Workspace:FindFirstChild("GameBall")
    if not GameBall then return false end
    
    -- Check distance to GameBall
    local ballDistance = (localPlayerPosition.Position - GameBall.Position).Magnitude
    if ballDistance > AutoSpamV2DetectionDistance then return false end
    
    -- Check if any player is within range
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerDistance = (localPlayerPosition.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if playerDistance <= AutoSpamV2DetectionDistance then
                return true
            end
        end
    end
    
    return false
end

-- NEW: Create Auto Spam V2 Detector ESP (Orange Circle)
local function CreateAutoSpamV2DetectorESP()
    if AutoSpamV2DetectorESP then
        AutoSpamV2DetectorESP:Destroy()
    end
    
    local localPlayer = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localPlayer then return end
    
    AutoSpamV2DetectorESP = Instance.new("Part")
    AutoSpamV2DetectorESP.Name = "AutoSpamV2DetectorESP"
    AutoSpamV2DetectorESP.Parent = Workspace
    AutoSpamV2DetectorESP.Anchored = true
    AutoSpamV2DetectorESP.CanCollide = false
    AutoSpamV2DetectorESP.Transparency = 0.8
    AutoSpamV2DetectorESP.BrickColor = BrickColor.new("Bright orange")
    AutoSpamV2DetectorESP.Material = Enum.Material.Neon
    AutoSpamV2DetectorESP.Shape = Enum.PartType.Ball
    AutoSpamV2DetectorESP.Size = Vector3.new(AutoSpamV2DetectionDistance * 2, AutoSpamV2DetectionDistance * 2, AutoSpamV2DetectionDistance * 2)
    AutoSpamV2DetectorESP.Position = localPlayer.Position
end

-- NEW: Auto Spam V2 Logic (Redesigned)
local function StartAutoSpamV2()
    if AutoSpamV2Connection then
        AutoSpamV2Connection:Disconnect()
    end
    
    AutoSpamV2Connection = RunService.Heartbeat:Connect(function()
        if not AutoSpamV2Enabled then return end
        
        -- Check if both player and GameBall are within range
        local playerAndBallInRange = IsPlayerAndBallWithinV2Range()
        
        if playerAndBallInRange then
            if not AutoSpamV2Active then
                AutoSpamV2Active = true
                print("Auto Spam V2 Activated - Player and GameBall detected within range!")
            end
            
            -- Ultra-fast spam at 0.00000000000000000001 speed
            ExecuteSpamMultiplier()
            wait(0.00000000000000000001)
        else
            if AutoSpamV2Active then
                AutoSpamV2Active = false
                print("Auto Spam V2 Deactivated - Conditions no longer met")
            end
        end
    end)
end

-- NEW: Stop Auto Spam V2
local function StopAutoSpamV2()
    if AutoSpamV2Connection then
        AutoSpamV2Connection:Disconnect()
        AutoSpamV2Connection = nil
    end
    AutoSpamV2Active = false
end

-- Create colorful Ball ESP
local function CreateBallESP()
    local GameBall = Workspace:FindFirstChild("GameBall")
    if not GameBall then return end
    
    if BallESP then
        BallESP:Destroy()
    end
    
    -- Create highlight effect
    BallESP = Instance.new("Highlight")
    BallESP.Name = "BallESP"
    BallESP.Parent = GameBall
    BallESP.Adornee = GameBall
    BallESP.FillTransparency = 0.5
    BallESP.OutlineTransparency = 0
    BallESP.OutlineThickness = 2
    
    -- Set initial color
    UpdateBallESPColor()
end

-- Update Ball ESP Color based on ball state
local function UpdateBallESPColor()
    if not BallESP or not BallESP.Parent then return end
    
    local GameBall = Workspace:FindFirstChild("GameBall")
    if not GameBall then return end
    
    if IsGameBallRed() then
        -- Red ball - dangerous
        BallESP.FillColor = Color3.new(1, 0, 0) -- Red fill
        BallESP.OutlineColor = Color3.new(1, 0.5, 0) -- Orange outline
    else
        -- Normal ball - safe
        BallESP.FillColor = Color3.new(0, 1, 0) -- Green fill
        BallESP.OutlineColor = Color3.new(0, 0.8, 1) -- Cyan outline
    end
end

-- Start Ball ESP monitoring
local function StartBallESPMonitoring()
    if BallESPConnection then
        BallESPConnection:Disconnect()
    end
    
    BallESPConnection = RunService.Heartbeat:Connect(function()
        if not BallESPEnabled then return end
        
        local GameBall = Workspace:FindFirstChild("GameBall")
        if GameBall and not BallESP then
            CreateBallESP()
        elseif not GameBall and BallESP then
            BallESP:Destroy()
            BallESP = nil
        end
        
        UpdateBallESPColor()
    end)
end

-- Stop Ball ESP monitoring
local function StopBallESPMonitoring()
    if BallESPConnection then
        BallESPConnection:Disconnect()
        BallESPConnection = nil
    end
    
    if BallESP then
        BallESP:Destroy()
        BallESP = nil
    end
end

-- Create Parry Detector ESP (Green Circle)
local function CreateParryDetectorESP()
    if ParryDetectorESP then
        ParryDetectorESP:Destroy()
    end
    
    local localPlayer = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localPlayer then return end
    
    ParryDetectorESP = Instance.new("Part")
    ParryDetectorESP.Name = "ParryDetectorESP"
    ParryDetectorESP.Parent = Workspace
    ParryDetectorESP.Anchored = true
    ParryDetectorESP.CanCollide = false
    ParryDetectorESP.Transparency = 0.8
    ParryDetectorESP.BrickColor = BrickColor.new("Bright green")
    ParryDetectorESP.Material = Enum.Material.Neon
    ParryDetectorESP.Shape = Enum.PartType.Ball
    ParryDetectorESP.Size = Vector3.new(ParryDetectionDistance * 2, ParryDetectionDistance * 2, ParryDetectionDistance * 2)
    ParryDetectorESP.Position = localPlayer.Position
end

-- Create Spam Detector ESP (Blue Circle)
local function CreateSpamDetectorESP()
    if SpamDetectorESP then
        SpamDetectorESP:Destroy()
    end
    
    local localPlayer = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localPlayer then return end
    
    SpamDetectorESP = Instance.new("Part")
    SpamDetectorESP.Name = "SpamDetectorESP"
    SpamDetectorESP.Parent = Workspace
    SpamDetectorESP.Anchored = true
    SpamDetectorESP.CanCollide = false
    SpamDetectorESP.Transparency = 0.8
    SpamDetectorESP.BrickColor = BrickColor.new("Bright blue")
    SpamDetectorESP.Material = Enum.Material.Neon
    SpamDetectorESP.Shape = Enum.PartType.Ball
    SpamDetectorESP.Size = Vector3.new(SpamDetectionDistance * 2, SpamDetectionDistance * 2, SpamDetectionDistance * 2)
    SpamDetectorESP.Position = localPlayer.Position
end

-- Create Advanced Spam Detector ESP (Red Circle)
local function CreateAdvancedSpamDetectorESP()
    if AdvancedSpamDetectorESP then
        AdvancedSpamDetectorESP:Destroy()
    end
    
    local localPlayer = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localPlayer then return end
    
    AdvancedSpamDetectorESP = Instance.new("Part")
    AdvancedSpamDetectorESP.Name = "AdvancedSpamDetectorESP"
    AdvancedSpamDetectorESP.Parent = Workspace
    AdvancedSpamDetectorESP.Anchored = true
    AdvancedSpamDetectorESP.CanCollide = false
    AdvancedSpamDetectorESP.Transparency = 0.8
    AdvancedSpamDetectorESP.BrickColor = BrickColor.new("Really red")
    AdvancedSpamDetectorESP.Material = Enum.Material.Neon
    AdvancedSpamDetectorESP.Shape = Enum.PartType.Ball
    AdvancedSpamDetectorESP.Size = Vector3.new(AdvancedSpamDetectionDistance * 2, AdvancedSpamDetectionDistance * 2, AdvancedSpamDetectionDistance * 2)
    AdvancedSpamDetectorESP.Position = localPlayer.Position
end

-- Rayfield Auto Parry & Auto Spam Script - PARTE 2

-- Update ESP Positions
local function UpdateESPPositions()
    local localPlayer = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localPlayer then return end
    
    if ParryDetectorESP and ESPEnabled then
        ParryDetectorESP.Position = localPlayer.Position
        ParryDetectorESP.Size = Vector3.new(ParryDetectionDistance * 2, ParryDetectionDistance * 2, ParryDetectionDistance * 2)
    end
    
    if SpamDetectorESP and ESPEnabled then
        SpamDetectorESP.Position = localPlayer.Position
        SpamDetectorESP.Size = Vector3.new(SpamDetectionDistance * 2, SpamDetectionDistance * 2, SpamDetectionDistance * 2)
    end
    
    if AdvancedSpamDetectorESP and ESPEnabled and AdvancedSpamEnabled then
        AdvancedSpamDetectorESP.Position = localPlayer.Position
        AdvancedSpamDetectorESP.Size = Vector3.new(AdvancedSpamDetectionDistance * 2, AdvancedSpamDetectionDistance * 2, AdvancedSpamDetectionDistance * 2)
    end
    
    -- NEW: Update Auto Spam V2 ESP (uses original spam distance)
    if AutoSpamV2DetectorESP and ESPEnabled and AutoSpamV2Enabled then
        AutoSpamV2DetectorESP.Position = localPlayer.Position
        AutoSpamV2DetectorESP.Size = Vector3.new(SpamDetectionDistance * 2, SpamDetectionDistance * 2, SpamDetectionDistance * 2)
        AutoSpamV2DetectionDistance = SpamDetectionDistance -- Sync with original spam slider
    end
end

-- Destroy All ESP
local function DestroyAllESP()
    if ParryDetectorESP then
        ParryDetectorESP:Destroy()
        ParryDetectorESP = nil
    end
    if SpamDetectorESP then
        SpamDetectorESP:Destroy()
        SpamDetectorESP = nil
    end
    if AdvancedSpamDetectorESP then
        AdvancedSpamDetectorESP:Destroy()
        AdvancedSpamDetectorESP = nil
    end
    -- NEW: Destroy Auto Spam V2 ESP
    if AutoSpamV2DetectorESP then
        AutoSpamV2DetectorESP:Destroy()
        AutoSpamV2DetectorESP = nil
    end
end

-- Check if player is approaching within advanced range
local function IsPlayerApproachingAdvancedRange()
    local localPlayerPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not localPlayerPosition then return false end
    
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
            local playerDistance = (localPlayerPosition.Position - player.Character.HumanoidRootPart.Position).Magnitude
            if playerDistance <= AdvancedSpamDetectionDistance then
                return true
            end
        end
    end
    
    return false
end

-- Advanced Auto Spam Logic
local function StartAdvancedAutoSpam()
    if AdvancedSpamConnection then
        AdvancedSpamConnection:Disconnect()
    end
    
    AdvancedSpamConnection = RunService.Heartbeat:Connect(function()
        if not AdvancedSpamEnabled then return end
        
        local GameBall = Workspace:FindFirstChild("GameBall")
        if not GameBall then return end
        
        -- Check if player is within advanced range and ball is detected
        local playerInRange = IsPlayerApproachingAdvancedRange()
        local ballIsRed = IsGameBallRed()
        
        if playerInRange and ballIsRed then
            if not AdvancedSpamActive then
                AdvancedSpamActive = true
                print("Advanced Spam Activated - Player detected within range!")
            end
            
            -- Continuous spam while conditions are met
            ExecuteSpamMultiplier()
            wait(AutoSpamSpeed)
        else
            if AdvancedSpamActive then
                AdvancedSpamActive = false
                print("Advanced Spam Deactivated - Conditions no longer met")
            end
        end
        
        -- Update PlayerInAdvancedRange status
        PlayerInAdvancedRange = playerInRange
    end)
end

-- Stop Advanced Auto Spam
local function StopAdvancedAutoSpam()
    if AdvancedSpamConnection then
        AdvancedSpamConnection:Disconnect()
        AdvancedSpamConnection = nil
    end
    AdvancedSpamActive = false
    PlayerInAdvancedRange = false
end

-- ESP Square Creation (keeping original for compatibility)
local function CreateESPSquare()
    if ESPSquare then
        ESPSquare:Destroy()
    end

    local GameBall = Workspace:FindFirstChild("GameBall")  
    if not GameBall then return end  
      
    ESPSquare = Instance.new("SelectionBox")  
    ESPSquare.Parent = GameBall  
    ESPSquare.Adornee = GameBall  
    ESPSquare.Color3 = Color3.new(0, 1, 0) -- Green by default  
    ESPSquare.LineThickness = 0.1  
    ESPSquare.Transparency = 0.5
end

-- Check if GameBall is red
local function IsGameBallRed()
    local GameBall = Workspace:FindFirstChild("GameBall")
    if GameBall and GameBall.BrickColor == BrickColor.new("Really red") then
        return true
    end
    return false
end

-- Update ESP Color
local function UpdateESPColor()
    if ESPSquare and ESPSquare.Parent then
        if IsGameBallRed() then
            ESPSquare.Color3 = Color3.new(1, 0, 0) -- Red
        else
            ESPSquare.Color3 = Color3.new(0, 1, 0) -- Green
        end
    end
end

-- Get closest player distance
local function GetClosestPlayerDistance()
    local closestDistance = math.huge
    local localPlayerPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

    if not localPlayerPosition then return closestDistance end  
      
    for _, player in pairs(Players:GetPlayers()) do  
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  
            local distance = (localPlayerPosition.Position - player.Character.HumanoidRootPart.Position).Magnitude  
            if distance < closestDistance then  
                closestDistance = distance  
            end  
        end  
    end  
      
    return closestDistance
end

-- Check for players within specific distance
local function IsPlayerWithinDistance(distance)
    local localPlayerPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")

    if not localPlayerPosition then return false end  
      
    for _, player in pairs(Players:GetPlayers()) do  
        if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("HumanoidRootPart") then  
            local playerDistance = (localPlayerPosition.Position - player.Character.HumanoidRootPart.Position).Magnitude  
            if playerDistance <= distance then  
                return true  
            end  
        end  
    end  
      
    return false
end

-- Execute parry code
local function ExecuteParry()
    local args = {
        [1] = 2.933813859058389e+76
    }

    local success, error = pcall(function()  
        game:GetService("ReplicatedStorage").TS.GeneratedNetworkRemotes:FindFirstChild("RE_4.6848415795802784e+76"):FireServer(unpack(args))  
    end)  
      
    if not success then  
        print("Parry execution failed:", error)  
    end
end

-- Execute multiple parries for spam multiplication
local function ExecuteSpamMultiplier()
    if AutoSpamMultiplicationEnabled then
        for i = 1, SpamMultiplier do
            ExecuteParry()
            if i < SpamMultiplier then
                wait(0.001) -- Small delay between multiple executions
            end
        end
    else
        ExecuteParry()
    end
end

-- Auto Parry Logic with Ball Detection
local function StartAutoParry()
    if ParryConnection then
        ParryConnection:Disconnect()
    end

    local lastParryTime = 0  
    local currentCooldown = 0.6 -- Default cooldown  
      
    ParryConnection = RunService.Heartbeat:Connect(function()  
        if not AutoParryEnabled then return end  
          
        local GameBall = Workspace:FindFirstChild("GameBall")  
        if not GameBall then return end  
          
        -- Check for players within 40 distance to adjust cooldown  
        local closestPlayerDistance = GetClosestPlayerDistance()  
        if closestPlayerDistance <= 40 then  
            currentCooldown = 0.1 -- Faster when player nearby  
        else  
            currentCooldown = 0.6 -- Normal speed  
        end  
          
        -- Check for players within 45 distance to adjust parry detection distance  
        local playerInRange45 = IsPlayerWithinDistance(26)  
        if playerInRange45 and not PlayerDetectedInRange45 then  
            -- Player entered range, increase distance  
            ParryDetectionDistance = ParryDetectionDistance + 7.5  
            PlayerDetectedInRange45 = true  
        elseif not playerInRange45 and PlayerDetectedInRange45 then  
            -- Player left range, decrease distance  
            ParryDetectionDistance = math.max(ParryDetectionDistance - 7.5, BaseParryDistance)  
            PlayerDetectedInRange45 = false  
        end  
          
        -- Check if ball is detected (red)  
        if IsGameBallRed() then  
            if not BallDetected then  
                BallDetected = true  
                DistanceIncreaseStarted = false -- Reset the distance increase flag  
            end  
              
            local localPlayerPosition = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")  
            if localPlayerPosition then  
                local distance = (localPlayerPosition.Position - GameBall.Position).Magnitude  
                  
                if distance <= ParryDetectionDistance then  
                    local currentTime = tick()  
                    if currentTime - lastParryTime >= currentCooldown then  
                        ExecuteParry()  
                        lastParryTime = currentTime  
                    end  
                end  
            end  
        else  
            BallDetected = false  
            DistanceIncreaseStarted = false  
        end  
          
        UpdateESPColor()
        UpdateESPPositions() -- Update ESP positions
    end)
end

-- Auto Spam Logic
local function StartAutoSpam()
    if SpamConnection then
        SpamConnection:Disconnect()
    end

    SpamConnection = RunService.Heartbeat:Connect(function()  
        if not AutoSpamEnabled then return end  
          
        local closestDistance = GetClosestPlayerDistance()  
          
        if closestDistance <= SpamDetectionDistance and IsGameBallRed() then  
            ExecuteSpamMultiplier() -- Use the new function that handles multiplication  
            wait(AutoSpamSpeed)  
        end  
    end)
end

-- Reset detection distances when someone dies
local function OnPlayerDied()
    ParryDetectionDistance = BaseParryDistance
    SpamDetectionDistance = 30
    PlayerDetectedInRange45 = false
    BallDetected = false
    DistanceIncreaseStarted = false
    -- Reset advanced spam variables
    AdvancedSpamActive = false
    PlayerInAdvancedRange = false
    -- NEW: Reset Auto Spam V2 variables
    AutoSpamV2Active = false
end

-- Monitor player deaths
local function MonitorPlayerDeaths()
    for _, player in pairs(Players:GetPlayers()) do
        if player.Character and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid.Died:Connect(OnPlayerDied)
        end

        player.CharacterAdded:Connect(function(character)  
            character:WaitForChild("Humanoid").Died:Connect(OnPlayerDied)  
        end)  
    end  
      
    Players.PlayerAdded:Connect(function(player)  
        player.CharacterAdded:Connect(function(character)  
            character:WaitForChild("Humanoid").Died:Connect(OnPlayerDied)  
        end)  
    end)
end

-- Monitor GameBall recreation
local function MonitorGameBallRecreation()
    Workspace.ChildAdded:Connect(function(child)
        if child.Name == "GameBall" then
            ParryDetectionDistance = BaseParryDistance
            PlayerDetectedInRange45 = false
            BallDetected = false
            DistanceIncreaseStarted = false
            -- Reset advanced spam variables
            AdvancedSpamActive = false
            PlayerInAdvancedRange = false
            -- NEW: Reset Auto Spam V2 variables
            AutoSpamV2Active = false

            if AutoParryEnabled then  
                CreateESPSquare()  
            end
            
            -- Recreate ESPs if enabled
            if ESPEnabled then
                if AutoParryEnabled then CreateParryDetectorESP() end
                if AutoSpamEnabled then CreateSpamDetectorESP() end
                if AdvancedSpamEnabled then CreateAdvancedSpamDetectorESP() end
                if AutoSpamV2Enabled then CreateAutoSpamV2DetectorESP() end -- NEW
            end
            
            -- Recreate Ball ESP if enabled
            if BallESPEnabled then
                CreateBallESP()
            end
        end  
    end)
end

-- Distance increase only when ball is detected
spawn(function()
    while true do
        wait(1)
        if AutoParryEnabled and BallDetected and IsGameBallRed() then
            if not DistanceIncreaseStarted then
                DistanceIncreaseStarted = true
            end
            if DistanceIncreaseStarted then
                ParryDetectionDistance = ParryDetectionDistance + 6
            end
        end
    end
end)

-- TOGGLES AND SLIDERS

-- Auto Parry Toggle
local AutoParryToggle = MainTab:CreateToggle({
    Name = "Auto Parry",
    CurrentValue = false,
    Flag = "AutoParryToggle",
    Callback = function(Value)
        AutoParryEnabled = Value

        if Value then  
            CreateESPSquare()  
            StartAutoParry()  
            ParryDetectionDistance = BaseParryDistance -- Reset distance when enabled  
            PlayerDetectedInRange45 = false  
            BallDetected = false  
            DistanceIncreaseStarted = false
            
            -- Create Parry ESP if visual ESP is enabled
            if ESPEnabled then
                CreateParryDetectorESP()
            end
        else  
            if ESPSquare then  
                ESPSquare:Destroy()  
                ESPSquare = nil  
            end  
            if ParryConnection then  
                ParryConnection:Disconnect()  
            end
            
            -- Destroy Parry ESP
            if ParryDetectorESP then
                ParryDetectorESP:Destroy()
                ParryDetectorESP = nil
            end
        end
    end,
})

-- Auto Parry Distance Slider
local ParryDistanceSlider = MainTab:CreateSlider({
    Name = "Auto Parry Distance",
    Range = {10, 100},
    Increment = 1,
    CurrentValue = 30,
    Flag = "ParryDistanceSlider",
    Callback = function(Value)
        BaseParryDistance = Value
        ParryDetectionDistance = Value -- Update current distance too
    end,
})

-- Auto Spam Toggle
local AutoSpamToggle = MainTab:CreateToggle({
    Name = "Auto Spam",
    CurrentValue = false,
    Flag = "AutoSpamToggle",
    Callback = function(Value)
        AutoSpamEnabled = Value

        if Value then  
            StartAutoSpam()  
            SpamDetectionDistance = 30 -- Reset distance when enabled
            
            -- Create Spam ESP if visual ESP is enabled
            if ESPEnabled then
                CreateSpamDetectorESP()
            end
        else  
            if SpamConnection then  
                SpamConnection:Disconnect()  
            end
            
            -- Destroy Spam ESP
            if SpamDetectorESP then
                SpamDetectorESP:Destroy()
                SpamDetectorESP = nil
            end
        end
    end,
})

-- Advanced Auto Spam Toggle
local AdvancedAutoSpamToggle = MainTab:CreateToggle({
    Name = "Advanced Auto Spam (35 Range)",
    CurrentValue = false,
    Flag = "AdvancedAutoSpamToggle",
    Callback = function(Value)
        AdvancedSpamEnabled = Value
        
        if Value then
            StartAdvancedAutoSpam()
            
            -- Create Advanced Spam ESP if visual ESP is enabled
            if ESPEnabled then
                CreateAdvancedSpamDetectorESP()
            end
        else
            StopAdvancedAutoSpam()
            
            -- Destroy Advanced Spam ESP
            if AdvancedSpamDetectorESP then
                AdvancedSpamDetectorESP:Destroy()
                AdvancedSpamDetectorESP = nil
            end
        end
    end,
})

-- NEW: Auto Spam V2 Toggle (Redesigned)
local AutoSpamV2Toggle = MainTab:CreateToggle({
    Name = "Auto Spam V2 (GameBall + Player Detection)",
    CurrentValue = false,
    Flag = "AutoSpamV2Toggle",
    Callback = function(Value)
        AutoSpamV2Enabled = Value
        
        if Value then
            StartAutoSpamV2()
            
            -- Create Auto Spam V2 ESP if visual ESP is enabled
            if ESPEnabled then
                CreateAutoSpamV2DetectorESP()
            end
        else
            StopAutoSpamV2()
            
            -- Destroy Auto Spam V2 ESP
            if AutoSpamV2DetectorESP then
                AutoSpamV2DetectorESP:Destroy()
                AutoSpamV2DetectorESP = nil
            end
        end
    end,
})

-- Auto Spam Multiplication Toggle
local AutoSpamMultiplicationToggle = MainTab:CreateToggle({
    Name = "Auto Spam Multiplication",
    CurrentValue = false,
    Flag = "AutoSpamMultiplicationToggle",
    Callback = function(Value)
        AutoSpamMultiplicationEnabled = Value
    end,
})

-- Auto Spam Speed Slider
local SpamSpeedSlider = MainTab:CreateSlider({
    Name = "Auto Spam Speed",
    Range = {0.0000001, 1},
    Increment = 0.0000001,
    CurrentValue = 0.0000001,
    Flag = "SpamSpeedSlider",
    Callback = function(Value)
        AutoSpamSpeed = Value
    end,
})

-- Auto Spam Distance Slider (now controls V2 too)
local SpamDistanceSlider = MainTab:CreateSlider({
    Name = "Auto Spam Distance",
    Range = {10, 100},
    Increment = 1,
    CurrentValue = 30,
    Flag = "SpamDistanceSlider",
    Callback = function(Value)
        SpamDetectionDistance = Value
        AutoSpamV2DetectionDistance = Value -- NEW: Also controls V2 distance
    end,
})

-- Auto Spam Multiplication Slider
local SpamMultiplierSlider = MainTab:CreateSlider({
    Name = "Auto Spam Multiplier",
    Range = {1, 10},
    Increment = 1,
    CurrentValue = 1,
    Flag = "SpamMultiplierSlider",
    Callback = function(Value)
        SpamMultiplier = Value
    end,
})

-- Ball ESP Toggle (Colorful ESP for GameBall)
local BallESPToggle = VisualTab:CreateToggle({
    Name = "Colorful Ball ESP",
    CurrentValue = false,
    Flag = "BallESPToggle",
    Callback = function(Value)
        BallESPEnabled = Value
        
        if Value then
            StartBallESPMonitoring()
            local GameBall = Workspace:FindFirstChild("GameBall")
            if GameBall then
                CreateBallESP()
            end
        else
            StopBallESPMonitoring()
        end
    end,
})

-- Visual Tab - ESP Visual Detectors Toggle
local ESPVisualToggle = VisualTab:CreateToggle({
    Name = "ESP Visual Detectors",
    CurrentValue = false,
    Flag = "ESPVisualToggle",
    Callback = function(Value)
        ESPEnabled = Value
        
        if Value then
            -- Create ESPs for currently active functions
            if AutoParryEnabled then
                CreateParryDetectorESP()
            end
            if AutoSpamEnabled then
                CreateSpamDetectorESP()
            end
            if AdvancedSpamEnabled then
                CreateAdvancedSpamDetectorESP()
            end
            if AutoSpamV2Enabled then
                CreateAutoSpamV2DetectorESP()
            end
        else
            -- Destroy all ESPs
            DestroyAllESP()
        end
    end,
})

-- Visual Tab Info Section
local VisualInfoSection = VisualTab:CreateSection("ESP Information")

VisualTab:CreateLabel("🔴 Red Ball ESP: Dangerous (Red fill + Orange outline)")
VisualTab:CreateLabel("🟢 Green Ball ESP: Safe (Green fill + Cyan outline)")
VisualTab:CreateLabel("Green Circle: Auto Parry Detection Range")
VisualTab:CreateLabel("Blue Circle: Auto Spam Detection Range") 
VisualTab:CreateLabel("Red Circle: Advanced Spam Detection Range (35)")
VisualTab:CreateLabel("Orange Circle: Auto Spam V2 GameBall+Player Detection") -- NEW
VisualTab:CreateLabel("ESP circles follow you and resize dynamically")

-- Info Section
local InfoSection = MainTab:CreateSection("Information")

MainTab:CreateLabel("Auto Parry: Detects red GameBall within range")
MainTab:CreateLabel("Auto Spam: Spams when player nearby + red ball")
MainTab:CreateLabel("Advanced Spam: Continuous spam at 35 range")
MainTab:CreateLabel("Auto Spam V2: Detects GameBall + any player simultaneously") -- NEW
MainTab:CreateLabel("V2 Ultra Speed: 0.00000000000000000001 spam rate") -- NEW
MainTab:CreateLabel("Spam Multiplication: Executes multiple parries per spam")
MainTab:CreateLabel("Detection distance increases +3.5 every second")
MainTab:CreateLabel("Distance increase ONLY starts when ball is detected")
MainTab:CreateLabel("Distances reset on death or ball recreation")
MainTab:CreateLabel("Auto Parry: 0.25s speed when player within 40 range")
MainTab:CreateLabel("Auto Parry: +2.5 distance when player within 26 range")

-- Initialize monitoring
MonitorPlayerDeaths()
MonitorGameBallRecreation()

-- ESP Position Update Loop
spawn(function()
    while true do
        wait(0.1) -- Update every 0.1 seconds for smooth movement
        if ESPEnabled then
            UpdateESPPositions()
        end
    end
end)

-- Cleanup on script end
game.Players.PlayerRemoving:Connect(function(player)
    if player == LocalPlayer then
        if ESPSquare then
            ESPSquare.Destroy()
        end
        if ParryConnection then
            ParryConnection:Disconnect()
        end
        if SpamConnection then
            SpamConnection:Disconnect()
        end
        -- Cleanup advanced spam and ESPs
        if AdvancedSpamConnection then
            AdvancedSpamConnection:Disconnect()
        end
        -- NEW: Cleanup Auto Spam V2
        if AutoSpamV2Connection then
            AutoSpamV2Connection:Disconnect()
        end
        DestroyAllESP()
        StopBallESPMonitoring()
    end
end)
